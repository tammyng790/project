/* ----------------------------------------
Code exported from SAS Enterprise Guide
DATE: Friday, 10 November, 2023     TIME: 4:44:31 AM
PROJECT: Techlympics
PROJECT PATH: C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp
---------------------------------------- */

/* Conditionally delete set of tables or views, if they exists          */
/* If the member does not exist, then no action is performed   */
%macro _eg_conditional_dropds /parmbuff;
	
   	%local num;
   	%local stepneeded;
   	%local stepstarted;
   	%local dsname;
	%local name;

   	%let num=1;
	/* flags to determine whether a PROC SQL step is needed */
	/* or even started yet                                  */
	%let stepneeded=0;
	%let stepstarted=0;
   	%let dsname= %qscan(&syspbuff,&num,',()');
	%do %while(&dsname ne);	
		%let name = %sysfunc(left(&dsname));
		%if %qsysfunc(exist(&name)) %then %do;
			%let stepneeded=1;
			%if (&stepstarted eq 0) %then %do;
				proc sql;
				%let stepstarted=1;

			%end;
				drop table &name;
		%end;

		%if %sysfunc(exist(&name,view)) %then %do;
			%let stepneeded=1;
			%if (&stepstarted eq 0) %then %do;
				proc sql;
				%let stepstarted=1;
			%end;
				drop view &name;
		%end;
		%let num=%eval(&num+1);
      	%let dsname=%qscan(&syspbuff,&num,',()');
	%end;
	%if &stepstarted %then %do;
		quit;
	%end;
%mend _eg_conditional_dropds;


/* Build where clauses from stored process parameters */
%macro _eg_WhereParam( COLUMN, PARM, OPERATOR, TYPE=S, MATCHALL=_ALL_VALUES_, MATCHALL_CLAUSE=1, MAX= , IS_EXPLICIT=0, MATCH_CASE=1);

  %local q1 q2 sq1 sq2;
  %local isEmpty;
  %local isEqual isNotEqual;
  %local isIn isNotIn;
  %local isString;
  %local isBetween;

  %let isEqual = ("%QUPCASE(&OPERATOR)" = "EQ" OR "&OPERATOR" = "=");
  %let isNotEqual = ("%QUPCASE(&OPERATOR)" = "NE" OR "&OPERATOR" = "<>");
  %let isIn = ("%QUPCASE(&OPERATOR)" = "IN");
  %let isNotIn = ("%QUPCASE(&OPERATOR)" = "NOT IN");
  %let isString = (%QUPCASE(&TYPE) eq S or %QUPCASE(&TYPE) eq STRING );
  %if &isString %then
  %do;
	%if "&MATCH_CASE" eq "0" %then %do;
		%let COLUMN = %str(UPPER%(&COLUMN%));
	%end;
	%let q1=%str(%");
	%let q2=%str(%");
	%let sq1=%str(%'); 
	%let sq2=%str(%'); 
  %end;
  %else %if %QUPCASE(&TYPE) eq D or %QUPCASE(&TYPE) eq DATE %then 
  %do;
    %let q1=%str(%");
    %let q2=%str(%"d);
	%let sq1=%str(%'); 
    %let sq2=%str(%'); 
  %end;
  %else %if %QUPCASE(&TYPE) eq T or %QUPCASE(&TYPE) eq TIME %then
  %do;
    %let q1=%str(%");
    %let q2=%str(%"t);
	%let sq1=%str(%'); 
    %let sq2=%str(%'); 
  %end;
  %else %if %QUPCASE(&TYPE) eq DT or %QUPCASE(&TYPE) eq DATETIME %then
  %do;
    %let q1=%str(%");
    %let q2=%str(%"dt);
	%let sq1=%str(%'); 
    %let sq2=%str(%'); 
  %end;
  %else
  %do;
    %let q1=;
    %let q2=;
	%let sq1=;
    %let sq2=;
  %end;
  
  %if "&PARM" = "" %then %let PARM=&COLUMN;

  %let isBetween = ("%QUPCASE(&OPERATOR)"="BETWEEN" or "%QUPCASE(&OPERATOR)"="NOT BETWEEN");

  %if "&MAX" = "" %then %do;
    %let MAX = &parm._MAX;
    %if &isBetween %then %let PARM = &parm._MIN;
  %end;

  %if not %symexist(&PARM) or (&isBetween and not %symexist(&MAX)) %then %do;
    %if &IS_EXPLICIT=0 %then %do;
		not &MATCHALL_CLAUSE
	%end;
	%else %do;
	    not 1=1
	%end;
  %end;
  %else %if "%qupcase(&&&PARM)" = "%qupcase(&MATCHALL)" %then %do;
    %if &IS_EXPLICIT=0 %then %do;
	    &MATCHALL_CLAUSE
	%end;
	%else %do;
	    1=1
	%end;	
  %end;
  %else %if (not %symexist(&PARM._count)) or &isBetween %then %do;
    %let isEmpty = ("&&&PARM" = "");
    %if (&isEqual AND &isEmpty AND &isString) %then
       &COLUMN is null;
    %else %if (&isNotEqual AND &isEmpty AND &isString) %then
       &COLUMN is not null;
    %else %do;
	   %if &IS_EXPLICIT=0 %then %do;
           &COLUMN &OPERATOR 
			%if "&MATCH_CASE" eq "0" %then %do;
				%unquote(&q1)%QUPCASE(&&&PARM)%unquote(&q2)
			%end;
			%else %do;
				%unquote(&q1)&&&PARM%unquote(&q2)
			%end;
	   %end;
	   %else %do;
	       &COLUMN &OPERATOR 
			%if "&MATCH_CASE" eq "0" %then %do;
				%unquote(%nrstr(&sq1))%QUPCASE(&&&PARM)%unquote(%nrstr(&sq2))
			%end;
			%else %do;
				%unquote(%nrstr(&sq1))&&&PARM%unquote(%nrstr(&sq2))
			%end;
	   %end;
       %if &isBetween %then 
          AND %unquote(&q1)&&&MAX%unquote(&q2);
    %end;
  %end;
  %else 
  %do;
	%local emptyList;
  	%let emptyList = %symexist(&PARM._count);
  	%if &emptyList %then %let emptyList = &&&PARM._count = 0;
	%if (&emptyList) %then
	%do;
		%if (&isNotin) %then
		   1;
		%else
			0;
	%end;
	%else %if (&&&PARM._count = 1) %then 
    %do;
      %let isEmpty = ("&&&PARM" = "");
      %if (&isIn AND &isEmpty AND &isString) %then
        &COLUMN is null;
      %else %if (&isNotin AND &isEmpty AND &isString) %then
        &COLUMN is not null;
      %else %do;
	    %if &IS_EXPLICIT=0 %then %do;
			%if "&MATCH_CASE" eq "0" %then %do;
				&COLUMN &OPERATOR (%unquote(&q1)%QUPCASE(&&&PARM)%unquote(&q2))
			%end;
			%else %do;
				&COLUMN &OPERATOR (%unquote(&q1)&&&PARM%unquote(&q2))
			%end;
	    %end;
		%else %do;
		    &COLUMN &OPERATOR (
			%if "&MATCH_CASE" eq "0" %then %do;
				%unquote(%nrstr(&sq1))%QUPCASE(&&&PARM)%unquote(%nrstr(&sq2)))
			%end;
			%else %do;
				%unquote(%nrstr(&sq1))&&&PARM%unquote(%nrstr(&sq2)))
			%end;
		%end;
	  %end;
    %end;
    %else 
    %do;
       %local addIsNull addIsNotNull addComma;
       %let addIsNull = %eval(0);
       %let addIsNotNull = %eval(0);
       %let addComma = %eval(0);
       (&COLUMN &OPERATOR ( 
       %do i=1 %to &&&PARM._count; 
          %let isEmpty = ("&&&PARM&i" = "");
          %if (&isString AND &isEmpty AND (&isIn OR &isNotIn)) %then
          %do;
             %if (&isIn) %then %let addIsNull = 1;
             %else %let addIsNotNull = 1;
          %end;
          %else
          %do;		     
            %if &addComma %then %do;,%end;
			%if &IS_EXPLICIT=0 %then %do;
				%if "&MATCH_CASE" eq "0" %then %do;
					%unquote(&q1)%QUPCASE(&&&PARM&i)%unquote(&q2)
				%end;
				%else %do;
					%unquote(&q1)&&&PARM&i%unquote(&q2)
				%end;
			%end;
			%else %do;
				%if "&MATCH_CASE" eq "0" %then %do;
					%unquote(%nrstr(&sq1))%QUPCASE(&&&PARM&i)%unquote(%nrstr(&sq2))
				%end;
				%else %do;
					%unquote(%nrstr(&sq1))&&&PARM&i%unquote(%nrstr(&sq2))
				%end; 
			%end;
            %let addComma = %eval(1);
          %end;
       %end;) 
       %if &addIsNull %then OR &COLUMN is null;
       %else %if &addIsNotNull %then AND &COLUMN is not null;
       %do;)
       %end;
    %end;
  %end;
%mend _eg_WhereParam;


/* save the current settings of XPIXELS and YPIXELS */
/* so that they can be restored later               */
%macro _sas_pushchartsize(new_xsize, new_ysize);
	%global _savedxpixels _savedypixels;
	options nonotes;
	proc sql noprint;
	select setting into :_savedxpixels
	from sashelp.vgopt
	where optname eq "XPIXELS";
	select setting into :_savedypixels
	from sashelp.vgopt
	where optname eq "YPIXELS";
	quit;
	options notes;
	GOPTIONS XPIXELS=&new_xsize YPIXELS=&new_ysize;
%mend _sas_pushchartsize;

/* restore the previous values for XPIXELS and YPIXELS */
%macro _sas_popchartsize;
	%if %symexist(_savedxpixels) %then %do;
		GOPTIONS XPIXELS=&_savedxpixels YPIXELS=&_savedypixels;
		%symdel _savedxpixels / nowarn;
		%symdel _savedypixels / nowarn;
	%end;
%mend _sas_popchartsize;


/* ---------------------------------- */
/* MACRO: enterpriseguide             */
/* PURPOSE: define a macro variable   */
/*   that contains the file system    */
/*   path of the WORK library on the  */
/*   server.  Note that different     */
/*   logic is needed depending on the */
/*   server type.                     */
/* ---------------------------------- */
%macro enterpriseguide;
%global sasworklocation;
%local tempdsn unique_dsn path;

%if &sysscp=OS %then %do; /* MVS Server */
	%if %sysfunc(getoption(filesystem))=MVS %then %do;
        /* By default, physical file name will be considered a classic MVS data set. */
	    /* Construct dsn that will be unique for each concurrent session under a particular account: */
		filename egtemp '&egtemp' disp=(new,delete); /* create a temporary data set */
 		%let tempdsn=%sysfunc(pathname(egtemp)); /* get dsn */
		filename egtemp clear; /* get rid of data set - we only wanted its name */
		%let unique_dsn=".EGTEMP.%substr(&tempdsn, 1, 16).PDSE"; 
		filename egtmpdir &unique_dsn
			disp=(new,delete,delete) space=(cyl,(5,5,50))
			dsorg=po dsntype=library recfm=vb
			lrecl=8000 blksize=8004 ;
		options fileext=ignore ;
	%end; 
 	%else %do; 
        /* 
		By default, physical file name will be considered an HFS 
		(hierarchical file system) file. 
		*/
		%if "%sysfunc(getoption(filetempdir))"="" %then %do;
			filename egtmpdir '/tmp';
		%end;
		%else %do;
			filename egtmpdir "%sysfunc(getoption(filetempdir))";
		%end;
	%end; 
	%let path=%sysfunc(pathname(egtmpdir));
    %let sasworklocation=%sysfunc(quote(&path));  
%end; /* MVS Server */
%else %do;
	%let sasworklocation = "%sysfunc(getoption(work))/";
%end;
%if &sysscp=VMS_AXP %then %do; /* Alpha VMS server */
	%let sasworklocation = "%sysfunc(getoption(work))";                         
%end;
%if &sysscp=CMS %then %do; 
	%let path = %sysfunc(getoption(work));                         
	%let sasworklocation = "%substr(&path, %index(&path,%str( )))";
%end;
%mend enterpriseguide;

%enterpriseguide


ODS PROCTITLE;
OPTIONS DEV=ACTIVEX;
GOPTIONS XPIXELS=0 YPIXELS=0;
FILENAME EGSRX TEMP;
ODS tagsets.sasreport13(ID=EGSRX) FILE=EGSRX
    STYLE=HtmlBlue
    STYLESHEET=(URL="file:///C:/Program%20Files%20(x86)/SASHome/x86/SASEnterpriseGuide/7.1/Styles/HtmlBlue.css")
    NOGTITLE
    NOGFOOTNOTE
    GPATH=&sasworklocation
    ENCODING=UTF8
    options(rolap="on")
;

/*   START OF NODE: Import Data (hies_state (1).csv)   */
%LET _CLIENTTASKLABEL='Import Data (hies_state (1).csv)';
%LET _CLIENTPROCESSFLOWNAME='Process Flow';
%LET _CLIENTPROJECTPATH='C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp';
%LET _CLIENTPROJECTPATHHOST='LAPTOP-78RN1F5P';
%LET _CLIENTPROJECTNAME='Techlympics.egp';

GOPTIONS ACCESSIBLE;
/* --------------------------------------------------------------------
   Code generated by a SAS task
   
   Generated on Thursday, 9 November, 2023 at 11:16:28 PM
   By task:     Import Data Wizard
   
   Source file: C:\Users\Lim Su-Lyn\Downloads\hies_state (1).csv
   Server:      Local File System
   
   Output data: WORK.hies_state (1)
   Server:      Local
   -------------------------------------------------------------------- */

DATA WORK.'hies_state (1)'n;
    LENGTH
        date               8
        state            $ 17
        income_mean        8
        income_median      8
        expenditure_mean   8
        gini               8
        poverty            8 ;
    FORMAT
        date             YYMMDD10.
        state            $CHAR17.
        income_mean      BEST5.
        income_median    BEST5.
        expenditure_mean BEST4.
        gini             BEST7.
        poverty          BEST4. ;
    INFORMAT
        date             YYMMDD10.
        state            $CHAR17.
        income_mean      BEST5.
        income_median    BEST5.
        expenditure_mean BEST4.
        gini             BEST7.
        poverty          BEST4. ;
    INFILE 'C:\Users\Lim Su-Lyn\AppData\Roaming\SAS\EnterpriseGuide\EGTEMP\SEG-288-6fa537e4\contents\hies_state (1)-b4b8f775df2c49b6b87235304ddedd95.txt'
        LRECL=56
        ENCODING="WLATIN1"
        TERMSTR=CRLF
        DLM='7F'x
        MISSOVER
        DSD ;
    INPUT
        date             : ?? YYMMDD10.
        state            : $CHAR17.
        income_mean      : ?? BEST5.
        income_median    : ?? BEST5.
        expenditure_mean : ?? BEST4.
        gini             : ?? COMMA7.
        poverty          : ?? COMMA4. ;
RUN;


GOPTIONS NOACCESSIBLE;
%LET _CLIENTTASKLABEL=;
%LET _CLIENTPROCESSFLOWNAME=;
%LET _CLIENTPROJECTPATH=;
%LET _CLIENTPROJECTPATHHOST=;
%LET _CLIENTPROJECTNAME=;


/*   START OF NODE: Filter and Sort (2)   */
%LET _CLIENTTASKLABEL='Filter and Sort (2)';
%LET _CLIENTPROCESSFLOWNAME='Process Flow';
%LET _CLIENTPROJECTPATH='C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp';
%LET _CLIENTPROJECTPATHHOST='LAPTOP-78RN1F5P';
%LET _CLIENTPROJECTNAME='Techlympics.egp';

GOPTIONS ACCESSIBLE;
%_eg_conditional_dropds(WORK.FILTER_FOR_HIES_STATE__1_);

PROC SQL;
   CREATE TABLE WORK.FILTER_FOR_HIES_STATE__1_ AS 
   SELECT t1.state, 
          t1.income_mean, 
          t1.income_median, 
          t1.expenditure_mean, 
          t1.gini, 
          t1.poverty
      FROM WORK.'HIES_STATE (1)'n t1
      WHERE t1.state NOT = 'W.P. Putrajaya' AND t1.state NOT = 'W.P. Labuan';
QUIT;

GOPTIONS NOACCESSIBLE;


%LET _CLIENTTASKLABEL=;
%LET _CLIENTPROCESSFLOWNAME=;
%LET _CLIENTPROJECTPATH=;
%LET _CLIENTPROJECTPATHHOST=;
%LET _CLIENTPROJECTNAME=;


/*   START OF NODE: Import Data (gdp_state.csv)   */
%LET _CLIENTTASKLABEL='Import Data (gdp_state.csv)';
%LET _CLIENTPROCESSFLOWNAME='Process Flow';
%LET _CLIENTPROJECTPATH='C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp';
%LET _CLIENTPROJECTPATHHOST='LAPTOP-78RN1F5P';
%LET _CLIENTPROJECTNAME='Techlympics.egp';

GOPTIONS ACCESSIBLE;
/* --------------------------------------------------------------------
   Code generated by a SAS task
   
   Generated on Thursday, 9 November, 2023 at 11:16:29 PM
   By task:     Import Data Wizard
   
   Source file: C:\Users\Lim Su-Lyn\Downloads\gdp_state.csv
   Server:      Local File System
   
   Output data: WORK.gdp_state
   Server:      Local
   -------------------------------------------------------------------- */

DATA WORK.gdp_state;
    LENGTH
        state            $ 17
        growth             8
        contribution       8
        level              8 ;
    FORMAT
        state            $CHAR17.
        growth           BEST6.
        contribution     BEST6.
        level            BEST10. ;
    INFORMAT
        state            $CHAR17.
        growth           BEST6.
        contribution     BEST6.
        level            BEST10. ;
    INFILE 'C:\Users\Lim Su-Lyn\AppData\Roaming\SAS\EnterpriseGuide\EGTEMP\SEG-288-6fa537e4\contents\gdp_state-5ba2cf0d992e4603a3ac55accbae5ebd.txt'
        LRECL=41
        ENCODING="WLATIN1"
        TERMSTR=CRLF
        DLM='7F'x
        MISSOVER
        DSD ;
    INPUT
        state            : $CHAR17.
        growth           : ?? COMMA6.
        contribution     : ?? COMMA6.
        level            : ?? COMMA10. ;
RUN;


GOPTIONS NOACCESSIBLE;
%LET _CLIENTTASKLABEL=;
%LET _CLIENTPROCESSFLOWNAME=;
%LET _CLIENTPROJECTPATH=;
%LET _CLIENTPROJECTPATHHOST=;
%LET _CLIENTPROJECTNAME=;


/*   START OF NODE: Query Builder   */
%LET _CLIENTTASKLABEL='Query Builder';
%LET _CLIENTPROCESSFLOWNAME='Process Flow';
%LET _CLIENTPROJECTPATH='C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp';
%LET _CLIENTPROJECTPATHHOST='LAPTOP-78RN1F5P';
%LET _CLIENTPROJECTNAME='Techlympics.egp';

GOPTIONS ACCESSIBLE;
%_eg_conditional_dropds(WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_);

PROC SQL;
   CREATE TABLE WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_ AS 
   SELECT t1.state, 
          t1.income_mean, 
          t1.income_median, 
          t1.expenditure_mean, 
          t1.gini, 
          t1.poverty, 
          t2.growth, 
          t2.contribution, 
          t2.level
      FROM WORK.FILTER_FOR_HIES_STATE__1_ t1
           INNER JOIN WORK.GDP_STATE t2 ON (t1.state = t2.state);
QUIT;

GOPTIONS NOACCESSIBLE;



%LET _CLIENTTASKLABEL=;
%LET _CLIENTPROCESSFLOWNAME=;
%LET _CLIENTPROJECTPATH=;
%LET _CLIENTPROJECTPATHHOST=;
%LET _CLIENTPROJECTNAME=;


/*   START OF NODE: Bar Chart of Poverty Rate   */
%LET _CLIENTTASKLABEL='Bar Chart of Poverty Rate';
%LET _CLIENTPROCESSFLOWNAME='Process Flow';
%LET _CLIENTPROJECTPATH='C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp';
%LET _CLIENTPROJECTPATHHOST='LAPTOP-78RN1F5P';
%LET _CLIENTPROJECTNAME='Techlympics.egp';

GOPTIONS ACCESSIBLE;
/* -------------------------------------------------------------------
   Code generated by SAS Task

   Generated on: Friday, November 10, 2023 at 4:44:27 AM
   By task: Bar Chart of Poverty Rate

   Input Data: Local:WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_
   Server:  Local
   ------------------------------------------------------------------- */

%_eg_conditional_dropds(WORK.SORTTempTableSorted);
/* -------------------------------------------------------------------
   Sort data set Local:WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_
   ------------------------------------------------------------------- */

PROC SQL;
	CREATE VIEW WORK.SORTTempTableSorted AS
		SELECT T.state, T.poverty
	FROM WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_ as T
;
QUIT;
Axis1
	STYLE=1
	WIDTH=1
	MINOR=NONE


;
Axis2
	STYLE=1
	WIDTH=1


;
TITLE;
TITLE1 "Bar Chart on Poverty Rate";
FOOTNOTE;
FOOTNOTE1 "Generated by the SAS System (&_SASSERVERNAME, &SYSSCPL) on %TRIM(%QSYSFUNC(DATE(), NLDATE20.)) at %TRIM(%SYSFUNC(TIME(), TIMEAMPM12.))";
PROC GCHART DATA=WORK.SORTTempTableSorted
;
	VBAR 
	 state
 /
	SUMVAR=poverty
	CLIPREF
FRAME	TYPE=SUM
	COUTLINE=BLACK
	RAXIS=AXIS1
	MAXIS=AXIS2
;
/* -------------------------------------------------------------------
   End of task code
   ------------------------------------------------------------------- */
RUN; QUIT;
%_eg_conditional_dropds(WORK.SORTTempTableSorted);
TITLE; FOOTNOTE;


GOPTIONS NOACCESSIBLE;
%LET _CLIENTTASKLABEL=;
%LET _CLIENTPROCESSFLOWNAME=;
%LET _CLIENTPROJECTPATH=;
%LET _CLIENTPROJECTPATHHOST=;
%LET _CLIENTPROJECTNAME=;


/*   START OF NODE: Bar Chart of Income Mean   */
%LET _CLIENTTASKLABEL='Bar Chart of Income Mean';
%LET _CLIENTPROCESSFLOWNAME='Process Flow';
%LET _CLIENTPROJECTPATH='C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp';
%LET _CLIENTPROJECTPATHHOST='LAPTOP-78RN1F5P';
%LET _CLIENTPROJECTNAME='Techlympics.egp';

GOPTIONS ACCESSIBLE;
/* -------------------------------------------------------------------
   Code generated by SAS Task

   Generated on: Friday, November 10, 2023 at 4:44:27 AM
   By task: Bar Chart of Income Mean

   Input Data: Local:WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_
   Server:  Local
   ------------------------------------------------------------------- */

%_eg_conditional_dropds(WORK.SORTTempTableSorted);
/* -------------------------------------------------------------------
   Sort data set Local:WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_
   ------------------------------------------------------------------- */

PROC SQL;
	CREATE VIEW WORK.SORTTempTableSorted AS
		SELECT T.state, T.income_mean
	FROM WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_ as T
;
QUIT;
Axis1
	STYLE=1
	WIDTH=1
	MINOR=NONE


;
Axis2
	STYLE=1
	WIDTH=1


;
TITLE;
TITLE1 "Bar Chart of Income Mean";
FOOTNOTE;
FOOTNOTE1 "Generated by the SAS System (&_SASSERVERNAME, &SYSSCPL) on %TRIM(%QSYSFUNC(DATE(), NLDATE20.)) at %TRIM(%SYSFUNC(TIME(), TIMEAMPM12.))";
PROC GCHART DATA=WORK.SORTTempTableSorted
;
	VBAR 
	 state
 /
	SUMVAR=income_mean
	CLIPREF
FRAME	TYPE=SUM
	COUTLINE=BLACK
	RAXIS=AXIS1
	MAXIS=AXIS2
;
/* -------------------------------------------------------------------
   End of task code
   ------------------------------------------------------------------- */
RUN; QUIT;
%_eg_conditional_dropds(WORK.SORTTempTableSorted);
TITLE; FOOTNOTE;


GOPTIONS NOACCESSIBLE;
%LET _CLIENTTASKLABEL=;
%LET _CLIENTPROCESSFLOWNAME=;
%LET _CLIENTPROJECTPATH=;
%LET _CLIENTPROJECTPATHHOST=;
%LET _CLIENTPROJECTNAME=;


/*   START OF NODE: Scatter Plot of Expenditure Mean and Income Mean   */
%LET _CLIENTTASKLABEL='Scatter Plot of Expenditure Mean and Income Mean';
%LET _CLIENTPROCESSFLOWNAME='Process Flow';
%LET _CLIENTPROJECTPATH='C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp';
%LET _CLIENTPROJECTPATHHOST='LAPTOP-78RN1F5P';
%LET _CLIENTPROJECTNAME='Techlympics.egp';

GOPTIONS ACCESSIBLE;
/* -------------------------------------------------------------------
   Code generated by SAS Task

   Generated on: Friday, November 10, 2023 at 4:44:27 AM
   By task: Scatter Plot of Expenditure Mean and Income Mean

   Input Data: Local:WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_
   Server:  Local
   ------------------------------------------------------------------- */

%_eg_conditional_dropds(WORK.SORTTempTableSorted);
/* -------------------------------------------------------------------
   Sort data set Local:WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_
   ------------------------------------------------------------------- */

PROC SQL;
	CREATE VIEW WORK.SORTTempTableSorted AS
		SELECT T.income_mean, T.expenditure_mean
	FROM WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_ as T
;
QUIT;
	SYMBOL1
	INTERPOL=NONE
	HEIGHT=10pt
	VALUE=CIRCLE
	LINE=1
	WIDTH=2

	CV = _STYLE_
;
Axis1
	STYLE=1
	WIDTH=1
	MINOR=NONE


;
Axis2
	STYLE=1
	WIDTH=1
	MINOR=NONE


;
TITLE;
TITLE1 "Scatter Plot";
FOOTNOTE;
FOOTNOTE1 "Generated by the SAS System (&_SASSERVERNAME, &SYSSCPL) on %TRIM(%QSYSFUNC(DATE(), NLDATE20.)) at %TRIM(%SYSFUNC(TIME(), TIMEAMPM12.))";
PROC GPLOT DATA=WORK.SORTTempTableSorted
;
PLOT expenditure_mean * income_mean / 
	VAXIS=AXIS1

	HAXIS=AXIS2

FRAME ;
/* -------------------------------------------------------------------
   End of task code
   ------------------------------------------------------------------- */
RUN; QUIT;
%_eg_conditional_dropds(WORK.SORTTempTableSorted);
TITLE; FOOTNOTE;
GOPTIONS RESET = SYMBOL;

GOPTIONS NOACCESSIBLE;
%LET _CLIENTTASKLABEL=;
%LET _CLIENTPROCESSFLOWNAME=;
%LET _CLIENTPROJECTPATH=;
%LET _CLIENTPROJECTPATHHOST=;
%LET _CLIENTPROJECTNAME=;


/*   START OF NODE: Scatter Plot of Poverty Rate and GDP - Growth   */
%LET _CLIENTTASKLABEL='Scatter Plot of Poverty Rate and GDP - Growth';
%LET _CLIENTPROCESSFLOWNAME='Process Flow';
%LET _CLIENTPROJECTPATH='C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp';
%LET _CLIENTPROJECTPATHHOST='LAPTOP-78RN1F5P';
%LET _CLIENTPROJECTNAME='Techlympics.egp';

GOPTIONS ACCESSIBLE;
/* -------------------------------------------------------------------
   Code generated by SAS Task

   Generated on: Friday, November 10, 2023 at 4:44:27 AM
   By task: Scatter Plot of Poverty Rate and GDP - Growth

   Input Data: Local:WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_
   Server:  Local
   ------------------------------------------------------------------- */

%_eg_conditional_dropds(WORK.SORTTempTableSorted);
/* -------------------------------------------------------------------
   Sort data set Local:WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_
   ------------------------------------------------------------------- */

PROC SQL;
	CREATE VIEW WORK.SORTTempTableSorted AS
		SELECT T.growth, T.poverty
	FROM WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_ as T
;
QUIT;
	SYMBOL1
	INTERPOL=NONE
	HEIGHT=10pt
	VALUE=CIRCLE
	LINE=1
	WIDTH=2

	CV = _STYLE_
;
Axis1
	STYLE=1
	WIDTH=1
	MINOR=NONE
	LABEL=(   "Poverty Rate ")


;
Axis2
	STYLE=1
	WIDTH=1
	MINOR=NONE
	LABEL=(   "GDP - Growth")


;
TITLE;
TITLE1 "Scatter Plot";
FOOTNOTE;
FOOTNOTE1 "Generated by the SAS System (&_SASSERVERNAME, &SYSSCPL) on %TRIM(%QSYSFUNC(DATE(), NLDATE20.)) at %TRIM(%SYSFUNC(TIME(), TIMEAMPM12.))";
PROC GPLOT DATA=WORK.SORTTempTableSorted
;
PLOT poverty * growth / 
	VAXIS=AXIS1

	HAXIS=AXIS2

FRAME ;
/* -------------------------------------------------------------------
   End of task code
   ------------------------------------------------------------------- */
RUN; QUIT;
%_eg_conditional_dropds(WORK.SORTTempTableSorted);
TITLE; FOOTNOTE;
GOPTIONS RESET = SYMBOL;

GOPTIONS NOACCESSIBLE;
%LET _CLIENTTASKLABEL=;
%LET _CLIENTPROCESSFLOWNAME=;
%LET _CLIENTPROJECTPATH=;
%LET _CLIENTPROJECTPATHHOST=;
%LET _CLIENTPROJECTNAME=;


/*   START OF NODE: Multiple Linear Regression   */
%LET _CLIENTTASKLABEL='Multiple Linear Regression';
%LET _CLIENTPROCESSFLOWNAME='Process Flow';
%LET _CLIENTPROJECTPATH='C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp';
%LET _CLIENTPROJECTPATHHOST='LAPTOP-78RN1F5P';
%LET _CLIENTPROJECTNAME='Techlympics.egp';

GOPTIONS ACCESSIBLE;
/* -------------------------------------------------------------------
   Code generated by SAS Task

   Generated on: Friday, November 10, 2023 at 4:44:27 AM
   By task: Multiple Linear Regression

   Input Data: Local:WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_
   Server:  Local
   ------------------------------------------------------------------- */
ODS GRAPHICS ON;

%_eg_conditional_dropds(WORK.SORTTempTableSorted,
		WORK.TMP1TempTableForPlots);
/* -------------------------------------------------------------------
   Determine the data set's type attribute (if one is defined)
   and prepare it for addition to the data set/view which is
   generated in the following step.
   ------------------------------------------------------------------- */
DATA _NULL_;
	dsid = OPEN("WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_", "I");
	dstype = ATTRC(DSID, "TYPE");
	IF TRIM(dstype) = " " THEN
		DO;
		CALL SYMPUT("_EG_DSTYPE_", "");
		CALL SYMPUT("_DSTYPE_VARS_", "");
		END;
	ELSE
		DO;
		CALL SYMPUT("_EG_DSTYPE_", "(TYPE=""" || TRIM(dstype) || """)");
		IF VARNUM(dsid, "_NAME_") NE 0 AND VARNUM(dsid, "_TYPE_") NE 0 THEN
			CALL SYMPUT("_DSTYPE_VARS_", "_TYPE_ _NAME_");
		ELSE IF VARNUM(dsid, "_TYPE_") NE 0 THEN
			CALL SYMPUT("_DSTYPE_VARS_", "_TYPE_");
		ELSE IF VARNUM(dsid, "_NAME_") NE 0 THEN
			CALL SYMPUT("_DSTYPE_VARS_", "_NAME_");
		ELSE
			CALL SYMPUT("_DSTYPE_VARS_", "");
		END;
	rc = CLOSE(dsid);
	STOP;
RUN;

/* -------------------------------------------------------------------
   Data set WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_ does not need to be sorted.
   ------------------------------------------------------------------- */
DATA WORK.SORTTempTableSorted &_EG_DSTYPE_ / VIEW=WORK.SORTTempTableSorted;
	SET WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_(KEEP=poverty growth &_DSTYPE_VARS_);
RUN;
TITLE;
TITLE1 "Linear Regression Results";
FOOTNOTE;
FOOTNOTE1 "Generated by the SAS System (&_SASSERVERNAME, &SYSSCPL) on %TRIM(%QSYSFUNC(DATE(), NLDATE20.)) at %TRIM(%SYSFUNC(TIME(), TIMEAMPM12.))";
PROC REG DATA=WORK.SORTTempTableSorted
		PLOTS(ONLY)=ALL
	;
	Linear_Regression_Model: MODEL poverty = growth
		/		SELECTION=NONE
	;
RUN;
QUIT;

/* -------------------------------------------------------------------
   End of task code
   ------------------------------------------------------------------- */
RUN; QUIT;
%_eg_conditional_dropds(WORK.SORTTempTableSorted,
		WORK.TMP1TempTableForPlots);
TITLE; FOOTNOTE;
ODS GRAPHICS OFF;


GOPTIONS NOACCESSIBLE;
%LET _CLIENTTASKLABEL=;
%LET _CLIENTPROCESSFLOWNAME=;
%LET _CLIENTPROJECTPATH=;
%LET _CLIENTPROJECTPATHHOST=;
%LET _CLIENTPROJECTNAME=;


/*   START OF NODE: Linear Regression   */
%LET _CLIENTTASKLABEL='Linear Regression';
%LET _CLIENTPROCESSFLOWNAME='Process Flow';
%LET _CLIENTPROJECTPATH='C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp';
%LET _CLIENTPROJECTPATHHOST='LAPTOP-78RN1F5P';
%LET _CLIENTPROJECTNAME='Techlympics.egp';

GOPTIONS ACCESSIBLE;
/* -------------------------------------------------------------------
   Code generated by SAS Task

   Generated on: Friday, November 10, 2023 at 4:44:27 AM
   By task: Linear Regression

   Input Data: Local:WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_
   Server:  Local
   ------------------------------------------------------------------- */
ODS GRAPHICS ON;

%_eg_conditional_dropds(WORK.SORTTempTableSorted,
		WORK.TMP1TempTableForPlots);
/* -------------------------------------------------------------------
   Determine the data set's type attribute (if one is defined)
   and prepare it for addition to the data set/view which is
   generated in the following step.
   ------------------------------------------------------------------- */
DATA _NULL_;
	dsid = OPEN("WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_", "I");
	dstype = ATTRC(DSID, "TYPE");
	IF TRIM(dstype) = " " THEN
		DO;
		CALL SYMPUT("_EG_DSTYPE_", "");
		CALL SYMPUT("_DSTYPE_VARS_", "");
		END;
	ELSE
		DO;
		CALL SYMPUT("_EG_DSTYPE_", "(TYPE=""" || TRIM(dstype) || """)");
		IF VARNUM(dsid, "_NAME_") NE 0 AND VARNUM(dsid, "_TYPE_") NE 0 THEN
			CALL SYMPUT("_DSTYPE_VARS_", "_TYPE_ _NAME_");
		ELSE IF VARNUM(dsid, "_TYPE_") NE 0 THEN
			CALL SYMPUT("_DSTYPE_VARS_", "_TYPE_");
		ELSE IF VARNUM(dsid, "_NAME_") NE 0 THEN
			CALL SYMPUT("_DSTYPE_VARS_", "_NAME_");
		ELSE
			CALL SYMPUT("_DSTYPE_VARS_", "");
		END;
	rc = CLOSE(dsid);
	STOP;
RUN;

/* -------------------------------------------------------------------
   Data set WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_ does not need to be sorted.
   ------------------------------------------------------------------- */
DATA WORK.SORTTempTableSorted &_EG_DSTYPE_ / VIEW=WORK.SORTTempTableSorted;
	SET WORK.QUERY_FOR_FILTER_FOR_HIES_STATE_(KEEP=poverty income_mean income_median expenditure_mean &_DSTYPE_VARS_);
RUN;
TITLE;
TITLE1 "Linear Regression Results";
FOOTNOTE;
FOOTNOTE1 "Generated by the SAS System (&_SASSERVERNAME, &SYSSCPL) on %TRIM(%QSYSFUNC(DATE(), NLDATE20.)) at %TRIM(%SYSFUNC(TIME(), TIMEAMPM12.))";
PROC REG DATA=WORK.SORTTempTableSorted
		PLOTS(ONLY)=ALL
	;
	Linear_Regression_Model: MODEL poverty = income_mean income_median expenditure_mean
		/		SELECTION=NONE
	;
RUN;
QUIT;

/* -------------------------------------------------------------------
   End of task code
   ------------------------------------------------------------------- */
RUN; QUIT;
%_eg_conditional_dropds(WORK.SORTTempTableSorted,
		WORK.TMP1TempTableForPlots);
TITLE; FOOTNOTE;
ODS GRAPHICS OFF;


GOPTIONS NOACCESSIBLE;
%LET _CLIENTTASKLABEL=;
%LET _CLIENTPROCESSFLOWNAME=;
%LET _CLIENTPROJECTPATH=;
%LET _CLIENTPROJECTPATHHOST=;
%LET _CLIENTPROJECTNAME=;


/*   START OF NODE: Import Data (hies_district.csv)   */
%LET _CLIENTTASKLABEL='Import Data (hies_district.csv)';
%LET _CLIENTPROCESSFLOWNAME='Process Flow';
%LET _CLIENTPROJECTPATH='C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp';
%LET _CLIENTPROJECTPATHHOST='LAPTOP-78RN1F5P';
%LET _CLIENTPROJECTNAME='Techlympics.egp';

GOPTIONS ACCESSIBLE;
/* --------------------------------------------------------------------
   Code generated by a SAS task
   
   Generated on Thursday, 9 November, 2023 at 11:16:38 PM
   By task:     Import Data Wizard
   
   Source file: C:\Users\Lim Su-Lyn\Downloads\hies_district.csv
   Server:      Local File System
   
   Output data: WORK.hies_district
   Server:      Local
   -------------------------------------------------------------------- */

DATA WORK.hies_district;
    LENGTH
        state            $ 17
        district         $ 22
        income_mean        8
        income_median      8
        expenditure_mean   8
        gini               8
        poverty            8 ;
    DROP
        date ;
    FORMAT
        state            $CHAR17.
        district         $CHAR22.
        income_mean      BEST5.
        income_median    BEST5.
        expenditure_mean BEST4.
        gini             BEST7.
        poverty          BEST4. ;
    INFORMAT
        state            $CHAR17.
        district         $CHAR22.
        income_mean      BEST5.
        income_median    BEST5.
        expenditure_mean BEST4.
        gini             BEST7.
        poverty          BEST4. ;
    INFILE 'C:\Users\Lim Su-Lyn\AppData\Roaming\SAS\EnterpriseGuide\EGTEMP\SEG-288-6fa537e4\contents\hies_district-60ec8a8fa31542c9bbbaca6dffde23b4.txt'
        LRECL=74
        ENCODING="WLATIN1"
        TERMSTR=CRLF
        DLM='7F'x
        MISSOVER
        DSD ;
    INPUT
        date             : $1.
        state            : $CHAR17.
        district         : $CHAR22.
        income_mean      : ?? BEST5.
        income_median    : ?? BEST5.
        expenditure_mean : ?? BEST4.
        gini             : ?? COMMA7.
        poverty          : ?? COMMA4. ;
RUN;


GOPTIONS NOACCESSIBLE;
%LET _CLIENTTASKLABEL=;
%LET _CLIENTPROCESSFLOWNAME=;
%LET _CLIENTPROJECTPATH=;
%LET _CLIENTPROJECTPATHHOST=;
%LET _CLIENTPROJECTNAME=;


/*   START OF NODE: Filter and Sort   */
%LET _CLIENTTASKLABEL='Filter and Sort';
%LET _CLIENTPROCESSFLOWNAME='Process Flow';
%LET _CLIENTPROJECTPATH='C:\Users\Lim Su-Lyn\Desktop\BSDA\Techlympics.egp';
%LET _CLIENTPROJECTPATHHOST='LAPTOP-78RN1F5P';
%LET _CLIENTPROJECTNAME='Techlympics.egp';

GOPTIONS ACCESSIBLE;
%_eg_conditional_dropds(WORK.FILTER_FOR_HIES_DISTRICT);

PROC SQL;
   CREATE TABLE WORK.FILTER_FOR_HIES_DISTRICT AS 
   SELECT t1.state, 
          t1.district, 
          t1.income_mean, 
          t1.income_median, 
          t1.expenditure_mean, 
          t1.gini, 
          t1.poverty
      FROM WORK.HIES_DISTRICT t1
      WHERE t1.state NOT = 'W.P. Labuan' AND t1.state NOT = 'W.P. Putrajaya';
QUIT;

GOPTIONS NOACCESSIBLE;


%LET _CLIENTTASKLABEL=;
%LET _CLIENTPROCESSFLOWNAME=;
%LET _CLIENTPROJECTPATH=;
%LET _CLIENTPROJECTPATHHOST=;
%LET _CLIENTPROJECTNAME=;

;*';*";*/;quit;run;
ODS _ALL_ CLOSE;
